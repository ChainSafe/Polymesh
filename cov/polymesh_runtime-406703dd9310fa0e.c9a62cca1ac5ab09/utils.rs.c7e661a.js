var data = {lines:[
{"lineNum":"    1","line":"use crate::balances;"},
{"lineNum":"    2","line":"use codec::Codec;"},
{"lineNum":"    3","line":"use rstd::prelude::*;"},
{"lineNum":"    4","line":"use session;"},
{"lineNum":"    5","line":"use sr_primitives::traits::{Member, SimpleArithmetic};"},
{"lineNum":"    6","line":"use srml_support::Parameter;"},
{"lineNum":"    7","line":"use system;"},
{"lineNum":"    8","line":""},
{"lineNum":"    9","line":"/// The module\'s configuration trait."},
{"lineNum":"   10","line":"pub trait Trait: system::Trait + balances::Trait + session::Trait {"},
{"lineNum":"   11","line":"    type TokenBalance: Parameter + Member + SimpleArithmetic + Codec + Default + Copy;"},
{"lineNum":"   12","line":"    fn as_u128(v: Self::TokenBalance) -> u128;"},
{"lineNum":"   13","line":"    fn as_tb(v: u128) -> Self::TokenBalance;"},
{"lineNum":"   14","line":"    fn token_balance_to_balance(v: Self::TokenBalance) -> <Self as balances::Trait>::Balance;"},
{"lineNum":"   15","line":"    fn balance_to_token_balance(v: <Self as balances::Trait>::Balance) -> Self::TokenBalance;"},
{"lineNum":"   16","line":"    fn validator_id_to_account_id(v: <Self as session::Trait>::ValidatorId) -> Self::AccountId;"},
{"lineNum":"   17","line":"}"},
{"lineNum":"   18","line":""},
{"lineNum":"   19","line":"// Other utility functions"},
{"lineNum":"   20","line":"#[inline]"},
{"lineNum":"   21","line":"/// Convert all letter characters of a slice to their upper case counterparts."},
{"lineNum":"   22","line":"/// # TODO"},
{"lineNum":"   23","line":"/// This functions is always called on `ticket`, maybe we could create a type for `ticket` to"},
{"lineNum":"   24","line":"/// ensure that type is UPPER case, and **avoid vector clone** (using `collect`)."},
{"lineNum":"   25","line":"pub fn bytes_to_upper(v: &[u8]) -> Vec<u8> {","class":"lineCov","hits":"1","order":"6257","possible_hits":"1",},
{"lineNum":"   26","line":"    v.iter()","class":"lineCov","hits":"1","order":"6258","possible_hits":"1",},
{"lineNum":"   27","line":"        .map(|chr| match chr {","class":"lineCov","hits":"2","order":"6321","possible_hits":"2",},
{"lineNum":"   28","line":"            97..=122 => chr - 32,","class":"lineCov","hits":"1","order":"6322","possible_hits":"1",},
{"lineNum":"   29","line":"            other => *other,","class":"lineCov","hits":"1","order":"6324","possible_hits":"1",},
{"lineNum":"   30","line":"        })","class":"linePartCov","hits":"1","order":"6326","possible_hits":"2",},
{"lineNum":"   31","line":"        .collect()"},
{"lineNum":"   32","line":"}","class":"linePartCov","hits":"1","order":"6345","possible_hits":"2",},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "polymesh_runtime-406703dd9310fa0e", "date" : "2019-11-06 13:35:33", "instrumented" : 7, "covered" : 7,};
var merged_data = [];
